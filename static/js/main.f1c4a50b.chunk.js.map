{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["card","id","name","email","className","src","alt","CardList","robots","cardArray","map","user","i","Card","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","console","log","fetch","then","Response","json","users","this","filteredRobots","filter","Searchrobot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qQAgBeA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACQ,sBAAKC,UAAU,sDAAf,UACQ,qBAAKC,IAAG,+BAA0BJ,GAAMK,IAAI,YACxC,sBAAKF,UAAU,iBAAf,UACI,6BAAKF,IACL,4BAAIC,WCWjBI,G,MAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAC5B,OACI,cAACC,EAAD,CAEAZ,GAAIO,EAAOI,GAAGX,GACdC,KAAMM,EAAOI,GAAGV,KAChBC,MAAOK,EAAOI,GAAGT,OAHZS,MAOrB,OACI,8BACKH,MCFMK,EAbG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,aACjB,OACI,qBAAKX,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,oBAAqBC,OAAQ,SAAtE,SACKJ,EAAMK,YC0CJC,G,wDAxCX,aAAgB,IAAD,8BACf,gBAiBFC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAjB3C,EAAKC,MAAO,CACRzB,OAAQ,GACRsB,YAAa,IAEjBI,QAAQC,IAAI,eANG,E,qDAUjB,WAAqB,IAAD,OAChBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAM,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAErB,OAAQgC,OAE1CN,QAAQC,IAAI,uB,oBAOZ,WACI,MAAiCM,KAAKR,MAA9BzB,EAAR,EAAQA,OAASsB,EAAjB,EAAiBA,YACXY,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAY1C,KAAK2C,cAAcC,SAAShB,EAAYe,kBAG/D,OADAX,QAAQC,IAAI,UAER,sBAAK/B,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,6BACA,cAAC,EAAD,CAAWW,aAAc0B,KAAKd,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUnB,OAAQkC,a,GAlCjBK,cCMHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCFdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMhDX,M","file":"static/js/main.f1c4a50b.chunk.js","sourcesContent":["import React from \"react\";\r\n//import { Component } from \"react\";\r\nimport './robotphoto.css';\r\n\r\nconst card = ({id, name, email}) => {\r\n    return (\r\n            <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n                    <img src={`https://robohash.org/${id}`} alt=\"RoboPic\"/>\r\n                        <div className='bg-light-green'>\r\n                            <h2>{name}</h2>\r\n                            <p>{email}</p>\r\n                        </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default card;","import React from 'react';\r\nimport Card from './Card';\r\nimport './index.css';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardArray = robots.map((user, i) => {\r\n            return (\r\n                <Card \r\n                key={i} \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email}\r\n                />\r\n                );\r\n        })\r\nreturn (\r\n    <div>\r\n        {cardArray}\r\n    </div>\r\n    );\r\n}\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) =>{\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue' \r\n                type=\"Search\" \r\n                placeholder='Search Robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY:'scroll', border: '3px solid darkred', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\nimport CardList from \"./CardList\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport Scroll from \"./Scroll\";\r\nimport \"./appCss.css\";\r\n\r\nclass App extends Component{\r\n    constructor () {\r\n    super()\r\n    this.state= {\r\n        robots: [],\r\n        searchfield: ''\r\n    }\r\n    console.log('constructor');\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n      fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(Response =>Response.json())\r\n      .then (users => this.setState({ robots: users}));\r\n    \r\n    console.log('componentDIdmount');\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n      this.setState({searchfield: event.target.value})\r\n  }\r\n\r\n    render(){\r\n        const { robots , searchfield } = this.state;\r\n        const filteredRobots = robots.filter(Searchrobot => {  \r\n            return Searchrobot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        console.log('render');\r\n        return(\r\n            <div className='tc'>\r\n                <h1 className=\"f1\">Robos Syndicate</h1> \r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                 <CardList robots={filteredRobots} /> \r\n                </Scroll>\r\n            </div>\r\n        );\r\n}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}